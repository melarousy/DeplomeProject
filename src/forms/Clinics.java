/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import hospitalsystem.DatabaseConnection;
import hospitalsystem.Data;
import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author m.amin
 */
public class Clinics extends javax.swing.JFrame {

    String Query = "SELECT ID as [رقم العيادة] ,CLINIC_NAME as [اسم العيادة] FROM CLINIC WHERE I=0";
    int ClincId = 0;

    /**
     * Creates new form Clinics
     */
    private static Clinics obj=null;
    private Clinics() {
        initComponents();
        this.setTitle("العيادات");
        this.setLocationRelativeTo(null);
        Image icon = Toolkit.getDefaultToolkit().getImage(".\\src\\images\\icon.gif");
        this.setIconImage(icon);
        this.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        this.jTextField1.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        this.jTable1.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        this.btnedite.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        this.btnSave.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        this.btndelete.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        this.jLabel1.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        refrishtable();
        btnedite.setEnabled(false);
        btndelete.setEnabled(false);

    }
    
    public static Clinics getObj(){
        if(obj==null){
            obj=new Clinics();
        }return obj;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnedite = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnnew = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(207, 221, 238));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("اسم العيادة");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 0, 255));
        btnSave.setText("حفظ");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btndelete.setForeground(new java.awt.Color(0, 0, 255));
        btndelete.setText("حذف");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnedite.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnedite.setForeground(new java.awt.Color(0, 0, 255));
        btnedite.setText("تعديل");
        btnedite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnediteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("لتعديل او حذف عيادة قم باختيارها من الجدول");

        btnnew.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnnew.setForeground(new java.awt.Color(0, 0, 255));
        btnnew.setText("جديد");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btndelete)
                        .addGap(27, 27, 27)
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnedite)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnnew)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnedite, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnnew, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Clinics");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (jTextField1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "ادخل اسم العيادة", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Save_Data();
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        String val = jTable1.getModel().getValueAt(row, 1).toString();
        jTextField1.setText(val);
        ClincId = (int) jTable1.getModel().getValueAt(row, 0);
        btnSave.setEnabled(false);
        btnedite.setEnabled(true);
        btndelete.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnediteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnediteActionPerformed
        // TODO add your handling code here:
        if (jTextField1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "ادخل اسم العيادة", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Edite_Data();
        }

    }//GEN-LAST:event_btnediteActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        Delete_Data();
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnnewActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        obj=null;
        Clinics.getObj().dispose();
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clinics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clinics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clinics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clinics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clinics().setVisible(true);
            }
        });
    }

    private void refrishtable() {
        jTable1.setModel(DbUtils.resultSetToTableModel(Data.Get_Data(Query)));
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        for (int i = 0; i < jTable1.getColumnCount(); i++) {
            jTable1.getColumnModel().getColumn(i).setCellRenderer(rightRenderer);
        }
        ((DefaultTableCellRenderer) jTable1.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.RIGHT);
    }

    public void Save_Data() {
        try {
            String sql1 = "Select ID,CLINIC_NAME ,I from CLINIC where CLINIC_NAME= '" + jTextField1.getText() + "'";

            ResultSet rs = Data.Get_Data(sql1);

            if (rs.next()) {
                if (rs.getInt("I") == 0) {
                    JOptionPane.showMessageDialog(this, "العيادة موجودة من قبل", "Error", JOptionPane.ERROR_MESSAGE);
                    jTextField1.setText("");
                    jTextField1.requestDefaultFocus();
                } else {
                    try {
                        int P = JOptionPane.showConfirmDialog(this, "العيادة محذوفة هل تريد استعاداتها", "Confirmation", JOptionPane.YES_NO_OPTION);
                        if (P == 0) {
                            String sql = "update CLINIC set I='" + 0 + "' where ID='" + rs.getInt("ID") + "'";
                            int i = Data.Save_Data(sql);
                            if (i == 0) {
                                JOptionPane.showMessageDialog(this, "تم استعادة العيادة", "استعادة عيادة", JOptionPane.INFORMATION_MESSAGE);
                                btnSave.setEnabled(true);
                                btnedite.setEnabled(false);
                                btndelete.setEnabled(false);
                                refrishtable();
                            }

                        }

                    } catch (HeadlessException | SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex);
                    }

                }

            } else {
                String sql = "insert into CLINIC(CLINIC_NAME,I)values('" + jTextField1.getText() + "','" + 0 + "')";
                int i = Data.Save_Data(sql);
                if (i == 0) {
                    JOptionPane.showMessageDialog(this, "تم الحفظ بنجاح", "اضافة عيادة", JOptionPane.INFORMATION_MESSAGE);
                    refrishtable();
                    btnSave.setEnabled(false);
                }

            }

        } catch (HeadlessException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }

    private void reset() {
        btnSave.setEnabled(true);
        btnedite.setEnabled(false);
        btndelete.setEnabled(false);
        jTextField1.setText("");
        ClincId = 0;
        refrishtable();

    }

    public void Edite_Data() {
        try {

            String sql1 = "Select ID,CLINIC_NAME ,I from CLINIC where CLINIC_NAME= '" + jTextField1.getText() + "'";
            ResultSet rs = Data.Get_Data(sql1);
            if (rs.next()) {
                if (rs.getInt("I") == 0) {
                    JOptionPane.showMessageDialog(this, "العيادة موجودة من قبل", "Error", JOptionPane.ERROR_MESSAGE);
                    jTextField1.requestDefaultFocus();
                } else {
                    int t = JOptionPane.showConfirmDialog(this, "العيادة محذوفة هل تريد استعاداتها", "Confirmation", JOptionPane.YES_NO_OPTION);
                    if (t == 0) {
                        String sql = "update CLINIC set I='" + 0 + "' where ID='" + rs.getInt("ID") + "'";
                        int i = Data.Save_Data(sql);
                        if (i == 0) {
                            JOptionPane.showMessageDialog(this, "تم استعادة العيادة", "استعادة عيادة", JOptionPane.INFORMATION_MESSAGE);
                            btnSave.setEnabled(true);
                            btnedite.setEnabled(false);
                            btndelete.setEnabled(false);
                            refrishtable();
                        }

                    }

                }

            } else {

                int P = JOptionPane.showConfirmDialog(this, "هل تريد تعديل اسم العيادة", "Confirmation", JOptionPane.YES_NO_OPTION);
                if (P == 0) {
                    String sql = "update CLINIC set CLINIC_NAME='" + jTextField1.getText() + "' where ID='" + ClincId + "'";
                    int i = Data.Save_Data(sql);
                    if (i == 0) {
                        JOptionPane.showMessageDialog(this, "تم التعديل بنجاح", "تعديل عيادة", JOptionPane.INFORMATION_MESSAGE);
                        reset();
                    }
                }
            }

        } catch (HeadlessException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

    }

    public void Delete_Data() {
        try {
            int P = JOptionPane.showConfirmDialog(this, "سيتم حذف العيادة ولن تتمكن من استعادتها", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (P == 0) {
                Connection con = DatabaseConnection.con();
                PreparedStatement pst = null;

                String sql = "update CLINIC set I='" + 1 + "' where ID='" + ClincId + "'";

                pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(this, "تم الحذف بنجاح", "حذف عيادة", JOptionPane.INFORMATION_MESSAGE);
                btnSave.setEnabled(true);
                btnedite.setEnabled(false);
                btndelete.setEnabled(false);
                refrishtable();
            }

        } catch (HeadlessException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnedite;
    private javax.swing.JButton btnnew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
